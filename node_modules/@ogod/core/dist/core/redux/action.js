export function createResource(entity, runtime) {
  return {
    type: 'RESOURCE_CREATE',
    payload: {
      name: entity.name,
      engineId: entity.engineId,
      sceneId: entity.sceneId,
      state: {
        entity,
        runtime
      }
    }
  };
}
export function loadResource(name) {
  return {
    type: 'RESOURCE_LOAD',
    payload: {
      name
    }
  };
}
export function loadedResource(entity) {
  return {
    type: 'RESOURCE_LOADED',
    payload: {
      name: entity.name,
      engineId: entity.engineId,
      sceneId: entity.sceneId
    }
  };
}
export function destroyResource(name) {
  return {
    type: 'RESOURCE_DESTROY',
    payload: {
      name
    }
  };
}
export function createInstance(entity, runtime) {
  return {
    type: 'INSTANCE_CREATE',
    payload: {
      id: entity.id,
      engineId: entity.engineId,
      sceneId: entity.sceneId,
      zIndex: entity.zIndex,
      state: {
        entity,
        runtime
      }
    }
  };
}
export function cloneInstance(id, engineId, sceneId, zIndex) {
  return {
    type: 'INSTANCE_CLONE',
    payload: {
      id,
      engineId,
      sceneId,
      zIndex
    }
  };
}
export function loadInstance(id) {
  return {
    type: 'INSTANCE_LOAD',
    payload: {
      id
    }
  };
}
export function loadedInstance(entity) {
  return {
    type: 'INSTANCE_LOADED',
    payload: {
      id: entity.id,
      engineId: entity.engineId,
      sceneId: entity.sceneId
    }
  };
}
export function initializeInstance(id, engineId, sceneId) {
  return {
    type: 'INSTANCE_INITIALIZE',
    payload: {
      id,
      engineId,
      sceneId
    }
  };
}
export function changeInstance(id, entity) {
  return {
    type: 'INSTANCE_CHANGES',
    payload: {
      id,
      changes: entity
    }
  };
}
export function changeInstanceProperty(id, entity) {
  return {
    type: 'INSTANCE_CHANGES_PROPERTY',
    payload: {
      id,
      changes: entity
    }
  };
}
export function replaceInstanceProperty(id, propName, state) {
  return {
    type: 'INSTANCE_REPLACE_PROPERTY',
    payload: {
      id,
      propName,
      changes: state
    }
  };
}
export function addInstanceProperty(id, propName, changes) {
  return {
    type: 'INSTANCE_PROPERTY_ADD',
    payload: {
      id,
      propName,
      changes
    }
  };
}
export function removeInstanceProperty(id, propName) {
  return {
    type: 'INSTANCE_PROPERTY_REMOVE',
    payload: {
      id,
      propName
    }
  };
}
export function destroyInstance(id) {
  return {
    type: 'INSTANCE_DESTROY',
    payload: {
      id
    }
  };
}
export function updateInstances(engineId, changes) {
  return {
    type: 'INSTANCE_UPDATE',
    payload: {
      engineId,
      changes
    }
  };
}
export function createScene(entity, runtime) {
  return {
    type: 'SCENE_CREATE',
    payload: {
      id: entity.id,
      engineId: entity.engineId,
      state: {
        entity,
        runtime
      }
    }
  };
}
export function loadScene(id) {
  return {
    type: 'SCENE_LOAD',
    payload: {
      id
    }
  };
}
export function loadedScene(id) {
  return {
    type: 'SCENE_LOADED',
    payload: {
      id
    }
  };
}
export function startScene(id) {
  return {
    type: 'SCENE_START',
    payload: {
      id
    }
  };
}
export function stopScene(id) {
  return {
    type: 'SCENE_STOP',
    payload: {
      id
    }
  };
}
export function changeScene(id, changes) {
  return {
    type: 'SCENE_CHANGES',
    payload: {
      id,
      changes
    }
  };
}
export function addToScene(id, childId, zIndex) {
  return {
    type: 'SCENE_ADD',
    payload: {
      id,
      childId,
      zIndex
    }
  };
}
export function removeFromScene(id, childId) {
  return {
    type: 'SCENE_REMOVE',
    payload: {
      id,
      childId
    }
  };
}
export function destroyScene(id) {
  return {
    type: 'SCENE_DESTROY',
    payload: {
      id
    }
  };
}
export function createEngine(entity, runtime) {
  return {
    type: 'ENGINE_CREATE',
    payload: {
      id: entity.id,
      state: {
        entity,
        runtime
      }
    }
  };
}
export function loadEngine(id) {
  return {
    type: 'ENGINE_LOAD',
    payload: {
      id
    }
  };
}
export function loadedEngine(id) {
  return {
    type: 'ENGINE_LOADED',
    payload: {
      id
    }
  };
}
export function startEngine(id) {
  return {
    type: 'ENGINE_START',
    payload: {
      id
    }
  };
}
export function stopEngine(id) {
  return {
    type: 'ENGINE_STOP',
    payload: {
      id
    }
  };
}
export function pauseEngine(id) {
  return {
    type: 'ENGINE_PAUSE',
    payload: {
      id
    }
  };
}
export function resumeEngine(id) {
  return {
    type: 'ENGINE_RESUME',
    payload: {
      id
    }
  };
}
export function togglePauseEngine(id) {
  return {
    type: 'ENGINE_TOGGLE_PAUSE',
    payload: {
      id
    }
  };
}
export function destroyEngine(id) {
  return {
    type: 'ENGINE_DESTROY',
    payload: {
      id
    }
  };
}
export function loadEngineScene(id, sceneId) {
  return {
    type: 'ENGINE_SCENE_LOAD',
    payload: {
      id,
      sceneId
    }
  };
}
export function loadEngineRenderer(id, renderer) {
  return {
    type: 'ENGINE_RENDERER_LOAD',
    payload: {
      id,
      renderer
    }
  };
}
export function changesEngineRenderer(id, changes) {
  return {
    type: 'ENGINE_RENDERER_CHANGES',
    payload: {
      id,
      changes
    }
  };
} //# sourceMappingURL=action.js.map