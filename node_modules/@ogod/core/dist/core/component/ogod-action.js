var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

import { ReleasableLitElement, createListenerOn } from "../utils.js";
import { property, customElement, html } from "../../../../../lit-element/lit-element.js";
import { ogodStore } from "../redux/store.js";
let OgodActionElement = class OgodActionElement extends ReleasableLitElement {
  render() {
    return html`<slot></slot>`;
  }

  async connectedCallback() {
    await super.connectedCallback();
    await this.updateComplete;
    this.releaseOnDestroy(createListenerOn(this, 'click', this.fireAction.bind(this)));
  }

  fireAction(e) {
    ogodStore.dispatch({
      type: this.type,
      payload: this.payload
    });
  }

};

__decorate([property()], OgodActionElement.prototype, "type", void 0);

__decorate([property({
  converter: val => JSON.parse(val)
})], OgodActionElement.prototype, "payload", void 0);

OgodActionElement = __decorate([customElement('ogod-action')], OgodActionElement);
export { OgodActionElement }; //# sourceMappingURL=ogod-action.js.map