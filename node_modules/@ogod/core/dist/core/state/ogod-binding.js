import { BaseRuntime } from "../utils.js";
export class OgodBindingEntity {
  constructor(type, fromWebToGl, fromGlToWeb) {
    this.type = type;
    this.fromWebToGl = fromWebToGl;
    this.fromGlToWeb = fromGlToWeb;
  }

}
export class OgodBindingRuntime extends BaseRuntime {
  update(entity) {
    if (JSON.stringify(entity.inValue) !== JSON.stringify(this.lastInValue)) {
      this.lastInValue = entity.inValue;
      let outValue;

      if (entity.fromWebToGl) {
        outValue = entity.fromWebToGl(entity.inValue);
      } else {
        outValue = entity.fromGlToWeb(entity.inValue);
      }

      return Object.assign(Object.assign({}, entity), {
        outValue
      });
    }

    return entity;
  }

  destroy(entity) {}

} //# sourceMappingURL=ogod-binding.js.map