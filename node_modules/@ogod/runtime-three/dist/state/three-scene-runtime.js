import { DefaultSceneRuntime, OgodSceneEntity, ogodStore } from "../../../core/dist/index.js";
import { Scene, Color } from "../../../../three/build/three.module.js";
export class ThreeSceneEntity extends OgodSceneEntity {}
export class ThreeSceneRuntime extends DefaultSceneRuntime {
  load(entity, state$) {
    this.instance = new Scene();

    if (entity.background) {
      this.instance.background = new Color(entity.background);
    }

    return super.load(entity, state$);
  }

  add(entity, id, zIndex) {
    setTimeout(() => {
      let runtime = ogodStore.getState().instances[id].runtime;
      let children = [];

      if (runtime.instances) {
        children = runtime.instances;
      } else if (runtime.instance) {
        children.push(runtime.instance);
      }

      for (let instance of children) {
        let child = instance;
        child.userData = {
          ogodId: id
        };
        this.instance.add(child);
      }
    });
    return super.add(entity, id, zIndex);
  }

  remove(entity, id) {
    let obj = this.instance.children.find(obj => obj.userData.ogodId === id);

    if (obj) {
      this.instance.remove(obj);
    } else {
      console.warn('Cannot remove instance %s from scene %s', id, entity.id);
    }

    return entity;
  }

  destroy() {
    this.instance.dispose();
  }

} //# sourceMappingURL=three-scene-runtime.js.map