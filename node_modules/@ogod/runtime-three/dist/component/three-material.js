var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

import { customElement, property } from "../../../../lit-element/lit-element.js";
import { MeshBasicMaterial, PointsMaterial, AdditiveBlending, Color, MeshPhongMaterial } from "../../../../three/build/three.module.js";
import { ThreeFixtureElement } from "./three-fixture.js";
export class ThreeAbstractMaterialElement extends ThreeFixtureElement {
  constructor() {
    super();
    this.classList.add('threeMaterial');
  }

}
let ThreeBasicMaterialElement = class ThreeBasicMaterialElement extends ThreeAbstractMaterialElement {
  computeArgs() {
    if (this.args) {
      return new MeshBasicMaterial(this.args);
    } else {
      return new MeshBasicMaterial();
    }
  }

};
ThreeBasicMaterialElement = __decorate([customElement('three-basic-material')], ThreeBasicMaterialElement);
export { ThreeBasicMaterialElement };
let ThreePhongMaterialElement = class ThreePhongMaterialElement extends ThreeAbstractMaterialElement {
  computeArgs() {
    if (this.args) {
      return new MeshPhongMaterial(this.args);
    } else {
      return new MeshPhongMaterial();
    }
  }

};
ThreePhongMaterialElement = __decorate([customElement('three-phong-material')], ThreePhongMaterialElement);
export { ThreePhongMaterialElement };
let ThreePointsMaterialElement = class ThreePointsMaterialElement extends ThreeAbstractMaterialElement {
  constructor() {
    super();
    this.transparent = false;
    this.depthTest = false;
    this.size = 1;
  }

  computeArgs() {
    return new PointsMaterial({
      size: this.size,
      transparent: this.transparent,
      depthTest: false,
      blending: AdditiveBlending,
      color: new Color(this.color || undefined)
    });
  }

};

__decorate([property()], ThreePointsMaterialElement.prototype, "size", void 0);

__decorate([property({
  converter: val => val === '' ? true : JSON.parse(val)
})], ThreePointsMaterialElement.prototype, "transparent", void 0);

__decorate([property({
  converter: val => val === '' ? true : JSON.parse(val)
})], ThreePointsMaterialElement.prototype, "depthTest", void 0);

__decorate([property()], ThreePointsMaterialElement.prototype, "color", void 0);

ThreePointsMaterialElement = __decorate([customElement('three-points-material')], ThreePointsMaterialElement);
export { ThreePointsMaterialElement }; //# sourceMappingURL=three-material.js.map