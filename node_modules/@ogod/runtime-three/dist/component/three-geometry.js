var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

import { customElement } from "../../../../lit-element/lit-element.js";
import { BoxBufferGeometry, BufferGeometry, TorusKnotBufferGeometry } from "../../../../three/build/three.module.js";
import { ThreeFixtureElement } from "./three-fixture.js";
let ThreeBufferGeometryElement = class ThreeBufferGeometryElement extends ThreeFixtureElement {
  constructor() {
    super();
    this.classList.add('threeGeometry');
  }

  computeArgs() {
    return new BufferGeometry();
  }

};
ThreeBufferGeometryElement = __decorate([customElement('three-buffer-geometry')], ThreeBufferGeometryElement);
export { ThreeBufferGeometryElement };
let ThreeBoxGeometryElement = class ThreeBoxGeometryElement extends ThreeFixtureElement {
  constructor() {
    super();
    this.classList.add('threeGeometry');
  }

  computeArgs() {
    if (this.args) {
      return new BoxBufferGeometry(...this.args);
    } else {
      return new BoxBufferGeometry();
    }
  }

};
ThreeBoxGeometryElement = __decorate([customElement('three-box-geometry')], ThreeBoxGeometryElement);
export { ThreeBoxGeometryElement };
let ThreeTorusKnotGeometryElement = class ThreeTorusKnotGeometryElement extends ThreeFixtureElement {
  constructor() {
    super();
    this.classList.add('threeGeometry');
  }

  computeArgs() {
    if (this.args) {
      return new TorusKnotBufferGeometry(...this.args);
    } else {
      return new TorusKnotBufferGeometry();
    }
  }

};
ThreeTorusKnotGeometryElement = __decorate([customElement('three-torus-knot-geometry')], ThreeTorusKnotGeometryElement);
export { ThreeTorusKnotGeometryElement }; //# sourceMappingURL=three-geometry.js.map