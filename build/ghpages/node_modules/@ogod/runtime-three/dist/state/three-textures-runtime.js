import { OgodResourceRuntime, OgodResourceEntity, loadedResource } from "../../../core/dist/index.js";
import { AsyncSubject, merge } from "../../../../rxjs/_esm5/index.js";
import { TextureLoader } from "../../../../three/build/three.module.js";
import { mapTo, last } from "../../../../rxjs/_esm5/operators/index.js";
export class ThreeTexturesEntity extends OgodResourceEntity {}
export class ThreeTexturesRuntime extends OgodResourceRuntime {
  load(entity) {
    let obs = [];
    var loader = new TextureLoader();
    entity.data = new Array();

    for (let i = entity.startIndex; i <= entity.endIndex; ++i) {
      let path = entity.path + i + entity.extension;
      let sub = new AsyncSubject();
      loader.load(path, texture => {
        entity.data.push(texture);
        sub.next();
        sub.complete();
      });
      obs.push(sub);
    }

    return merge(...obs).pipe(last(), mapTo(loadedResource(entity)));
  }

  destroy(entity) {
    if (entity.data) {
      for (let texture of entity.data) {
        texture.dispose();
      }
    }
  }

} //# sourceMappingURL=three-textures-runtime.js.map